@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model EnrollmentSystemUCB.Models.Entities.Student
<style>
    .rounded-square {
        border: 1px solid #ccc; /* Light border */
        border-radius: 15px; /* Rounded corners */
        background-color: #f9f9f9; /* Light background color */
        padding: 20px; /* Padding inside the square */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1000; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    .modal-dialog {
        margin: 15% auto; /* 15% from the top and centered */
        max-width: 500px; /* Max width of the modal */
    }

    .modal-header {
        border-bottom: none;
    }

    .modal-footer {
        border-top: none;
    }

    .modal-title {
        margin: 0;
        font-size: 1.25rem;
    }

    .modal-body {
        text-align: center; /* Center the text */
    }

    .table-container {
        max-height: 160px; /* Adjust this height to fit three rows */
        overflow-y: auto; /* Enable vertical scrolling */
        border: 1px solid #ccc; /* Optional: add a border for better visibility */
    }

    #subjectScheduleTable {
        width: 100%; /* Make the table take the full width of the container */
        border-collapse: collapse; /* Optional: collapse borders for a cleaner look */
    }

        #subjectScheduleTable th,
        #subjectScheduleTable td {
            border: 1px solid #ccc; /* Optional: add borders for table cells */
            padding: 8px; /* Add padding for better readability */
            text-align: left; /* Align text to the left */
        }
</style>

<form method="post" class="rounded-square">
    <div class="text-center">
        <h1 class="display-4">Welcome University of Cebu</h1>
        <h1 class="display-4">Edit Student</h1>
    </div>
    <div class="rounded-square mb-4 p-3">
        <p>Student Information</p>
        <div class="text-center">
            <div class="d-grid gap-2 d-md-block">
                <div class="row">
                    <!-- ID TextBox -->
                    <div class="col-md-3">
                        <div class="form-floating mb-sm-3">
                            <input type="text" class="form-control" asp-for="Id" id="studentId" readonly>
                            <label class="form-label" for="floatingPassword">ID Number:</label>
                        </div>
                    </div>

                    <!-- First Name TextBox -->
                    <div class="col-md-3">
                        <div class="form-floating mb-sm-3">
                            <input type="text" class="form-control" asp-for="StudFName">
                            <label for="floatingPassword">First Name:</label>
                            <span asp-validation-for="StudFName" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Middle Name TextBox -->
                    <div class="col-md-3">
                        <div class="form-floating mb-sm-3">
                            <input type="text" class="form-control" asp-for="StudMInitial">
                            <label for="floatingPassword">Middle Name:</label>
                        </div>
                    </div>

                    <!-- Last Name TextBox -->
                    <div class="col-md-3">
                        <div class="form-floating mb-sm-3">
                            <input type="text" class="form-control" asp-for="StudLName">
                            <label for="floatingPassword">Last Name:</label>
                            <span asp-validation-for="StudLName" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <!-- Course Label and Drop Down -->
                    <div class="col-md-6">
                        <div class="input-group mb-sm-3">
                            <label class="input-group-text" for="inputGroupSelect01">Course</label>
                            <select class="form-select" asp-for="StudCourse" id="inputGroupSelect01">
                                <option selected value="">Choose...</option>
                                <option value="BSIT">BSIT</option>
                                <option value="BSIS">BSIS</option>
                                <option value="ACT">ACT</option>
                            </select>
                            <span asp-validation-for="StudCourse" class="text-danger"></span>
                        </div>
                    </div>
                    <!-- Year TextBox -->
                    <div class="col-md-6">
                        <div class="form-floating mb-sm-3">
                            <input type="text" class="form-control" asp-for="StudYear">
                            <label for="floatingPassword">Year:</label>
                            <span asp-validation-for="StudYear" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="rounded-square mb-4 p-3">
        <p>Subjects Enrolled</p>
        <div class="table-container table-bordered text-center">
            <table class="table caption-top">
                <thead>
                    <tr>
                        <th>EDP CODE</th>
                        <th>SUBJECT CODE</th>
                        <th>DESCRIPTION</th>
                        <th>DAYS</th>
                        <th>SCHEDULE</th>
                        <th>UNITS</th>
                    </tr>
                </thead>
                <tbody id="enrolledSubject">

                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-lg-end mt-2">
            <!-- TOTAL UNITS -->
            <div class="col-md-2">
                <div class="form-floating mb-sm-2">
                    <input id="totalUnits" type="text" class="form-control" readonly>
                    <label class="form-label" for="floatingPassword">Total Units:</label>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center mt-4">
        <input class="btn btn-primary" type="submit" value="Save">
        <input class="btn btn-danger ms-3" type="submit" asp-action="Delete" asp-controller="Student" value="Delete">
    </div>
</form>

<script>
    async function loadEnrolledSubjects() {
        const studentId = document.getElementById("studentId").value;

        if (!studentId) {
            console.error("Student ID is missing.");
            return;
        }

        try {
            const response = await fetch(`/Student/GetEnrolledSubjects?studentId=${studentId}`);

            if (!response.ok) {
                alert("Failed to load enrolled subjects. Please try again.");
                console.error("Failed to fetch data. HTTP Status:", response.status);
                return;
            }

            const data = await response.json();

            // Check if enrolledSubjects exists and is an array
            if (data && Array.isArray(data.enrolledSubjects)) {
                const enrolledSubjectsTable = document.getElementById("enrolledSubject");
                enrolledSubjectsTable.innerHTML = ""; // Clear the table before adding new data
                let totalUnits = 0; // Initialize total units

                if (data.enrolledSubjects.length === 0) {
                    enrolledSubjectsTable.innerHTML = "<tr><td colspan='7'>No subjects enrolled.</td></tr>";
                } else {
                    // Iterate over the enrolledSubjects array and create rows
                    data.enrolledSubjects.forEach(subject => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td>${subject.subjectEDPCode}</td>
                            <td>${subject.subjectCode}</td>
                            <td>${subject.description}</td>
                            <td>${subject.days}</td>
                            <td>${subject.schedule}</td>
                            <td>${subject.units}</td>
                        `;
                        enrolledSubjectsTable.appendChild(row);

                        // Add the current subject's units to the total
                        totalUnits += subject.units;
                    });
                }

                // Update the totalUnits input field with the calculated total
                document.getElementById("totalUnits").value = totalUnits;
            } else {
                console.error("Invalid data format: enrolledSubjects is not an array.");
                alert("No subjects found or an error occurred.");
            }
        } catch (error) {
            console.error("Error fetching enrolled subjects:", error);
            alert("An error occurred while fetching the enrolled subjects. Please try again.");
        }
    }
    // Call the function on page load
    document.addEventListener("DOMContentLoaded", loadEnrolledSubjects);
</script>


